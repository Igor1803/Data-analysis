import scrapy
import pandas as pd
import matplotlib.pyplot as plt

class DivannewparsSpider(scrapy.Spider):
    name = "divannewpars"
    allowed_domains = ["divanchik.ru"]
    start_urls = ["https://divanchik.ru/category/pryamye-divany/"]

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CSV
    custom_settings = {
        'FEED_FORMAT': 'csv',
        'FEED_URI': 'divan_data.csv',
        'FEED_EXPORT_FIELDS': ['name', 'color', 'price'],  # –ü–æ—Ä—è–¥–æ–∫ –∫–æ–ª–æ–Ω–æ–∫
        'FEED_EXPORT_ENCODING': 'utf-8'
    }

    def parse(self, response):
        divans = response.css('div.product__item')

        for divan in divans:
            pre_name = divan.css('span.d-product-information__prename::text').get(default='').strip()
            model_name = divan.xpath('.//span[@class="d-product-information__prename"]/following-sibling::text()').get(default='').strip()
            color = divan.css('div.tovs__item__colors::text').get(default='').strip()
            price = divan.css('div.d-product-information__price.information__price__disc::text').get(default='').strip()
            price = ''.join(filter(str.isdigit, price))  # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã

            full_name = model_name if model_name else pre_name

            yield {
                'name': full_name,
                'color': color,
                'price': price
            }

    def closed(self, reason):
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ü–µ–Ω—ã –∏ —Å—Ç—Ä–æ–∏—Ç –≥—Ä–∞—Ñ–∏–∫."""
        try:
            df = pd.read_csv('divan_data.csv')

            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ü–µ–Ω—ã –≤ —á–∏—Å–ª–∞
            df['price'] = pd.to_numeric(df['price'], errors='coerce')

            # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            df = df.dropna(subset=['price'])

            # –°—á–∏—Ç–∞–µ–º —Å—Ä–µ–¥–Ω—é—é —Ü–µ–Ω—É
            avg_price = df['price'].mean()
            print(f"üìä –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –¥–∏–≤–∞–Ω–∞: {int(avg_price)} ‚ÇΩ")

            # –°—Ç—Ä–æ–∏–º –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É —Ü–µ–Ω
            plt.figure(figsize=(10, 5))
            plt.hist(df['price'], bins=10, color='skyblue', edgecolor='black')
            plt.xlabel("–¶–µ–Ω–∞ (‚ÇΩ)")
            plt.ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏–≤–∞–Ω–æ–≤")
            plt.title("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–Ω –Ω–∞ –¥–∏–≤–∞–Ω—ã")
            plt.grid(axis='y', linestyle='--', alpha=0.7)
            plt.savefig("price_histogram.png")  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É
            plt.show()

        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")


